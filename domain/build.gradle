plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
}

def secretProperties = new Properties()
secretProperties.load(new FileInputStream(rootProject.file("secrets.properties")))

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "MARVEL_API_BASE_URL", secretProperties["app.marvel_base_url"]
        buildConfigField "String", "MARVEL_API_PUBLIC_KEY", secretProperties["app.marvel_public_api_key"]
        buildConfigField "String", "MARVEL_API_HASH", secretProperties["app.marvel_hash"]

    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(':data')
    implementation 'com.google.firebase:firebase-crashlytics-buildtools:2.9.2'

    def dependencies = rootProject.ext.dependencies
    def testDependencies = rootProject.ext.testDependencies

    implementation dependencies.kotlin
    implementation dependencies.core

    implementation dependencies.moshi
    implementation dependencies.moshiKotlin
    kapt dependencies.moshiKapt
    implementation dependencies.moshiConverter
    implementation dependencies.okhttp
    implementation dependencies.glide
    implementation dependencies.paging
    implementation "javax.inject:javax.inject:1"

    testImplementation testDependencies.jUnit
    testImplementation testDependencies.testRunner
    testImplementation testDependencies.testEspresso
    testImplementation testDependencies.jUnitTest

}