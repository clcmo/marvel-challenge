plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

//import API secrets
def secretProperties = new Properties()
secretProperties.load(new FileInputStream(rootProject.file("secrets.properties")))

android {
    compileSdkVersion rootProject.compileSDK

    defaultConfig {
        minSdkVersion rootProject.minSDK
        targetSdkVersion rootProject.targetSDK

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        buildConfigField "String", "MARVEL_API_BASE_URL", secretProperties["app.marvel_base_url"]
        buildConfigField "String", "MARVEL_API_PUBLIC_KEY", secretProperties["app.marvel_public_api_key"]
        buildConfigField "String", "MARVEL_API_HASH", secretProperties["app.marvel_hash"]
    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles ('proguard-android-optimize.txt')
        }
    }

    namespace 'com.clcmo.core'
}

dependencies {
    def dependencies = rootProject.ext.dependencies
    def testDependencies = rootProject.ext.testDependencies

    // Kotlin
    api dependencies.kotlin

    // AndroidX
    api dependencies.appCompat
    api dependencies.recyclerView
    api dependencies.materialComponents

    // Constraint Layout
    api dependencies.constraintLayout

    // Lifecycle
    api dependencies.lifecycleExtension
    api dependencies.lifecycleFragment
    api dependencies.lifecycleLiveData
    api dependencies.lifecycleViewModel

    // Paging
    api dependencies.paging

    // Kotlin Coroutines
    api dependencies.coroutinesAndroid
    api dependencies.coroutinesPlayStore

    // Moshi
    api dependencies.moshiApi
    kapt dependencies.moshiKapt

    // Retrofit
    api dependencies.retrofitApi
    api dependencies.retrofitMoshi
    api dependencies.retrofitCoroutines

    // OkHttp3 Logging Interceptor
    api dependencies.okhttp

    // Glide
    api dependencies.glideApi
    kapt dependencies.glideKapt

    // Dagger
    api dependencies.daggerApi
    kapt dependencies.daggerKapt

    // Tests
    testImplementation testDependencies.jUnit
    androidTestImplementation testDependencies.testRunner
    androidTestImplementation testDependencies.testEspresso
}